using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace Peerfx_DB
{
    /// <summary>
    /// Controller class for User_Facebook
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class UserFacebookController
    {
        // Preload our schema..
        UserFacebook thisSchemaLoad = new UserFacebook();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public UserFacebookCollection FetchAll()
        {
            UserFacebookCollection coll = new UserFacebookCollection();
            Query qry = new Query(UserFacebook.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public UserFacebookCollection FetchByID(object UserKey)
        {
            UserFacebookCollection coll = new UserFacebookCollection().Where("user_key", UserKey).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public UserFacebookCollection FetchByQuery(Query qry)
        {
            UserFacebookCollection coll = new UserFacebookCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object UserKey)
        {
            return (UserFacebook.Delete(UserKey) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object UserKey)
        {
            return (UserFacebook.Destroy(UserKey) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(long? FbUid,int UserKey,string FbLocation,string FbEmail,int? FbFriendsCount,string FbAccessToken,DateTime? DateCreated,DateTime? LastChanged,bool? FbIsmale,string FbFirstName,string FbLastName,bool? FbIsverified)
	    {
		    UserFacebook item = new UserFacebook();
		    
            item.FbUid = FbUid;
            
            item.UserKey = UserKey;
            
            item.FbLocation = FbLocation;
            
            item.FbEmail = FbEmail;
            
            item.FbFriendsCount = FbFriendsCount;
            
            item.FbAccessToken = FbAccessToken;
            
            item.DateCreated = DateCreated;
            
            item.LastChanged = LastChanged;
            
            item.FbIsmale = FbIsmale;
            
            item.FbFirstName = FbFirstName;
            
            item.FbLastName = FbLastName;
            
            item.FbIsverified = FbIsverified;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(long? FbUid,int UserKey,string FbLocation,string FbEmail,int? FbFriendsCount,string FbAccessToken,DateTime? DateCreated,DateTime? LastChanged,bool? FbIsmale,string FbFirstName,string FbLastName,bool? FbIsverified)
	    {
		    UserFacebook item = new UserFacebook();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.FbUid = FbUid;
				
			item.UserKey = UserKey;
				
			item.FbLocation = FbLocation;
				
			item.FbEmail = FbEmail;
				
			item.FbFriendsCount = FbFriendsCount;
				
			item.FbAccessToken = FbAccessToken;
				
			item.DateCreated = DateCreated;
				
			item.LastChanged = LastChanged;
				
			item.FbIsmale = FbIsmale;
				
			item.FbFirstName = FbFirstName;
				
			item.FbLastName = FbLastName;
				
			item.FbIsverified = FbIsverified;
				
	        item.Save(UserName);
	    }
    }
}
