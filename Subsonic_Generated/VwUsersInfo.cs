using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace Peerfx_DB{
    /// <summary>
    /// Strongly-typed collection for the VwUsersInfo class.
    /// </summary>
    [Serializable]
    public partial class VwUsersInfoCollection : ReadOnlyList<VwUsersInfo, VwUsersInfoCollection>
    {        
        public VwUsersInfoCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the vw_Users_Info view.
    /// </summary>
    [Serializable]
    public partial class VwUsersInfo : ReadOnlyRecord<VwUsersInfo>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("vw_Users_Info", TableType.View, DataService.GetInstance("Peerfx"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarUserKey = new TableSchema.TableColumn(schema);
                colvarUserKey.ColumnName = "user_key";
                colvarUserKey.DataType = DbType.Int32;
                colvarUserKey.MaxLength = 0;
                colvarUserKey.AutoIncrement = false;
                colvarUserKey.IsNullable = false;
                colvarUserKey.IsPrimaryKey = false;
                colvarUserKey.IsForeignKey = false;
                colvarUserKey.IsReadOnly = false;
                
                schema.Columns.Add(colvarUserKey);
                
                TableSchema.TableColumn colvarAccountNumber = new TableSchema.TableColumn(schema);
                colvarAccountNumber.ColumnName = "account_number";
                colvarAccountNumber.DataType = DbType.AnsiString;
                colvarAccountNumber.MaxLength = 10;
                colvarAccountNumber.AutoIncrement = false;
                colvarAccountNumber.IsNullable = true;
                colvarAccountNumber.IsPrimaryKey = false;
                colvarAccountNumber.IsForeignKey = false;
                colvarAccountNumber.IsReadOnly = false;
                
                schema.Columns.Add(colvarAccountNumber);
                
                TableSchema.TableColumn colvarTitle = new TableSchema.TableColumn(schema);
                colvarTitle.ColumnName = "title";
                colvarTitle.DataType = DbType.String;
                colvarTitle.MaxLength = 10;
                colvarTitle.AutoIncrement = false;
                colvarTitle.IsNullable = true;
                colvarTitle.IsPrimaryKey = false;
                colvarTitle.IsForeignKey = false;
                colvarTitle.IsReadOnly = false;
                
                schema.Columns.Add(colvarTitle);
                
                TableSchema.TableColumn colvarFirstName = new TableSchema.TableColumn(schema);
                colvarFirstName.ColumnName = "first_name";
                colvarFirstName.DataType = DbType.String;
                colvarFirstName.MaxLength = 100;
                colvarFirstName.AutoIncrement = false;
                colvarFirstName.IsNullable = true;
                colvarFirstName.IsPrimaryKey = false;
                colvarFirstName.IsForeignKey = false;
                colvarFirstName.IsReadOnly = false;
                
                schema.Columns.Add(colvarFirstName);
                
                TableSchema.TableColumn colvarMiddleName = new TableSchema.TableColumn(schema);
                colvarMiddleName.ColumnName = "middle_name";
                colvarMiddleName.DataType = DbType.String;
                colvarMiddleName.MaxLength = 100;
                colvarMiddleName.AutoIncrement = false;
                colvarMiddleName.IsNullable = true;
                colvarMiddleName.IsPrimaryKey = false;
                colvarMiddleName.IsForeignKey = false;
                colvarMiddleName.IsReadOnly = false;
                
                schema.Columns.Add(colvarMiddleName);
                
                TableSchema.TableColumn colvarLastName = new TableSchema.TableColumn(schema);
                colvarLastName.ColumnName = "last_name";
                colvarLastName.DataType = DbType.String;
                colvarLastName.MaxLength = 100;
                colvarLastName.AutoIncrement = false;
                colvarLastName.IsNullable = true;
                colvarLastName.IsPrimaryKey = false;
                colvarLastName.IsForeignKey = false;
                colvarLastName.IsReadOnly = false;
                
                schema.Columns.Add(colvarLastName);
                
                TableSchema.TableColumn colvarDob = new TableSchema.TableColumn(schema);
                colvarDob.ColumnName = "dob";
                colvarDob.DataType = DbType.AnsiString;
                colvarDob.MaxLength = 0;
                colvarDob.AutoIncrement = false;
                colvarDob.IsNullable = true;
                colvarDob.IsPrimaryKey = false;
                colvarDob.IsForeignKey = false;
                colvarDob.IsReadOnly = false;
                
                schema.Columns.Add(colvarDob);
                
                TableSchema.TableColumn colvarCountryResidence = new TableSchema.TableColumn(schema);
                colvarCountryResidence.ColumnName = "country_residence";
                colvarCountryResidence.DataType = DbType.Int32;
                colvarCountryResidence.MaxLength = 0;
                colvarCountryResidence.AutoIncrement = false;
                colvarCountryResidence.IsNullable = true;
                colvarCountryResidence.IsPrimaryKey = false;
                colvarCountryResidence.IsForeignKey = false;
                colvarCountryResidence.IsReadOnly = false;
                
                schema.Columns.Add(colvarCountryResidence);
                
                TableSchema.TableColumn colvarEmail = new TableSchema.TableColumn(schema);
                colvarEmail.ColumnName = "email";
                colvarEmail.DataType = DbType.String;
                colvarEmail.MaxLength = 100;
                colvarEmail.AutoIncrement = false;
                colvarEmail.IsNullable = true;
                colvarEmail.IsPrimaryKey = false;
                colvarEmail.IsForeignKey = false;
                colvarEmail.IsReadOnly = false;
                
                schema.Columns.Add(colvarEmail);
                
                TableSchema.TableColumn colvarIpAddress = new TableSchema.TableColumn(schema);
                colvarIpAddress.ColumnName = "ip_address";
                colvarIpAddress.DataType = DbType.String;
                colvarIpAddress.MaxLength = 20;
                colvarIpAddress.AutoIncrement = false;
                colvarIpAddress.IsNullable = true;
                colvarIpAddress.IsPrimaryKey = false;
                colvarIpAddress.IsForeignKey = false;
                colvarIpAddress.IsReadOnly = false;
                
                schema.Columns.Add(colvarIpAddress);
                
                TableSchema.TableColumn colvarLastChanged = new TableSchema.TableColumn(schema);
                colvarLastChanged.ColumnName = "last_changed";
                colvarLastChanged.DataType = DbType.DateTime;
                colvarLastChanged.MaxLength = 0;
                colvarLastChanged.AutoIncrement = false;
                colvarLastChanged.IsNullable = false;
                colvarLastChanged.IsPrimaryKey = false;
                colvarLastChanged.IsForeignKey = false;
                colvarLastChanged.IsReadOnly = false;
                
                schema.Columns.Add(colvarLastChanged);
                
                TableSchema.TableColumn colvarSignedUp = new TableSchema.TableColumn(schema);
                colvarSignedUp.ColumnName = "signed_up";
                colvarSignedUp.DataType = DbType.DateTime;
                colvarSignedUp.MaxLength = 0;
                colvarSignedUp.AutoIncrement = false;
                colvarSignedUp.IsNullable = false;
                colvarSignedUp.IsPrimaryKey = false;
                colvarSignedUp.IsForeignKey = false;
                colvarSignedUp.IsReadOnly = false;
                
                schema.Columns.Add(colvarSignedUp);
                
                TableSchema.TableColumn colvarUserStatus = new TableSchema.TableColumn(schema);
                colvarUserStatus.ColumnName = "user_status";
                colvarUserStatus.DataType = DbType.Int32;
                colvarUserStatus.MaxLength = 0;
                colvarUserStatus.AutoIncrement = false;
                colvarUserStatus.IsNullable = true;
                colvarUserStatus.IsPrimaryKey = false;
                colvarUserStatus.IsForeignKey = false;
                colvarUserStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarUserStatus);
                
                TableSchema.TableColumn colvarUserType = new TableSchema.TableColumn(schema);
                colvarUserType.ColumnName = "user_type";
                colvarUserType.DataType = DbType.Int32;
                colvarUserType.MaxLength = 0;
                colvarUserType.AutoIncrement = false;
                colvarUserType.IsNullable = true;
                colvarUserType.IsPrimaryKey = false;
                colvarUserType.IsForeignKey = false;
                colvarUserType.IsReadOnly = false;
                
                schema.Columns.Add(colvarUserType);
                
                TableSchema.TableColumn colvarAddress1 = new TableSchema.TableColumn(schema);
                colvarAddress1.ColumnName = "address1";
                colvarAddress1.DataType = DbType.String;
                colvarAddress1.MaxLength = 100;
                colvarAddress1.AutoIncrement = false;
                colvarAddress1.IsNullable = true;
                colvarAddress1.IsPrimaryKey = false;
                colvarAddress1.IsForeignKey = false;
                colvarAddress1.IsReadOnly = false;
                
                schema.Columns.Add(colvarAddress1);
                
                TableSchema.TableColumn colvarAddress2 = new TableSchema.TableColumn(schema);
                colvarAddress2.ColumnName = "address2";
                colvarAddress2.DataType = DbType.String;
                colvarAddress2.MaxLength = 100;
                colvarAddress2.AutoIncrement = false;
                colvarAddress2.IsNullable = true;
                colvarAddress2.IsPrimaryKey = false;
                colvarAddress2.IsForeignKey = false;
                colvarAddress2.IsReadOnly = false;
                
                schema.Columns.Add(colvarAddress2);
                
                TableSchema.TableColumn colvarCity = new TableSchema.TableColumn(schema);
                colvarCity.ColumnName = "city";
                colvarCity.DataType = DbType.String;
                colvarCity.MaxLength = 100;
                colvarCity.AutoIncrement = false;
                colvarCity.IsNullable = true;
                colvarCity.IsPrimaryKey = false;
                colvarCity.IsForeignKey = false;
                colvarCity.IsReadOnly = false;
                
                schema.Columns.Add(colvarCity);
                
                TableSchema.TableColumn colvarState = new TableSchema.TableColumn(schema);
                colvarState.ColumnName = "state";
                colvarState.DataType = DbType.String;
                colvarState.MaxLength = 100;
                colvarState.AutoIncrement = false;
                colvarState.IsNullable = true;
                colvarState.IsPrimaryKey = false;
                colvarState.IsForeignKey = false;
                colvarState.IsReadOnly = false;
                
                schema.Columns.Add(colvarState);
                
                TableSchema.TableColumn colvarCountry = new TableSchema.TableColumn(schema);
                colvarCountry.ColumnName = "country";
                colvarCountry.DataType = DbType.Int32;
                colvarCountry.MaxLength = 0;
                colvarCountry.AutoIncrement = false;
                colvarCountry.IsNullable = true;
                colvarCountry.IsPrimaryKey = false;
                colvarCountry.IsForeignKey = false;
                colvarCountry.IsReadOnly = false;
                
                schema.Columns.Add(colvarCountry);
                
                TableSchema.TableColumn colvarPostalcode = new TableSchema.TableColumn(schema);
                colvarPostalcode.ColumnName = "postalcode";
                colvarPostalcode.DataType = DbType.String;
                colvarPostalcode.MaxLength = 20;
                colvarPostalcode.AutoIncrement = false;
                colvarPostalcode.IsNullable = true;
                colvarPostalcode.IsPrimaryKey = false;
                colvarPostalcode.IsForeignKey = false;
                colvarPostalcode.IsReadOnly = false;
                
                schema.Columns.Add(colvarPostalcode);
                
                TableSchema.TableColumn colvarPhonecountrycode1 = new TableSchema.TableColumn(schema);
                colvarPhonecountrycode1.ColumnName = "phonecountrycode1";
                colvarPhonecountrycode1.DataType = DbType.Int32;
                colvarPhonecountrycode1.MaxLength = 0;
                colvarPhonecountrycode1.AutoIncrement = false;
                colvarPhonecountrycode1.IsNullable = true;
                colvarPhonecountrycode1.IsPrimaryKey = false;
                colvarPhonecountrycode1.IsForeignKey = false;
                colvarPhonecountrycode1.IsReadOnly = false;
                
                schema.Columns.Add(colvarPhonecountrycode1);
                
                TableSchema.TableColumn colvarPhonetype1 = new TableSchema.TableColumn(schema);
                colvarPhonetype1.ColumnName = "phonetype1";
                colvarPhonetype1.DataType = DbType.Int32;
                colvarPhonetype1.MaxLength = 0;
                colvarPhonetype1.AutoIncrement = false;
                colvarPhonetype1.IsNullable = true;
                colvarPhonetype1.IsPrimaryKey = false;
                colvarPhonetype1.IsForeignKey = false;
                colvarPhonetype1.IsReadOnly = false;
                
                schema.Columns.Add(colvarPhonetype1);
                
                TableSchema.TableColumn colvarPhonenumber1 = new TableSchema.TableColumn(schema);
                colvarPhonenumber1.ColumnName = "phonenumber1";
                colvarPhonenumber1.DataType = DbType.String;
                colvarPhonenumber1.MaxLength = 20;
                colvarPhonenumber1.AutoIncrement = false;
                colvarPhonenumber1.IsNullable = true;
                colvarPhonenumber1.IsPrimaryKey = false;
                colvarPhonenumber1.IsForeignKey = false;
                colvarPhonenumber1.IsReadOnly = false;
                
                schema.Columns.Add(colvarPhonenumber1);
                
                TableSchema.TableColumn colvarPhonecountrycode2 = new TableSchema.TableColumn(schema);
                colvarPhonecountrycode2.ColumnName = "phonecountrycode2";
                colvarPhonecountrycode2.DataType = DbType.Int32;
                colvarPhonecountrycode2.MaxLength = 0;
                colvarPhonecountrycode2.AutoIncrement = false;
                colvarPhonecountrycode2.IsNullable = true;
                colvarPhonecountrycode2.IsPrimaryKey = false;
                colvarPhonecountrycode2.IsForeignKey = false;
                colvarPhonecountrycode2.IsReadOnly = false;
                
                schema.Columns.Add(colvarPhonecountrycode2);
                
                TableSchema.TableColumn colvarPhonetype2 = new TableSchema.TableColumn(schema);
                colvarPhonetype2.ColumnName = "phonetype2";
                colvarPhonetype2.DataType = DbType.Int32;
                colvarPhonetype2.MaxLength = 0;
                colvarPhonetype2.AutoIncrement = false;
                colvarPhonetype2.IsNullable = true;
                colvarPhonetype2.IsPrimaryKey = false;
                colvarPhonetype2.IsForeignKey = false;
                colvarPhonetype2.IsReadOnly = false;
                
                schema.Columns.Add(colvarPhonetype2);
                
                TableSchema.TableColumn colvarPhonenumber2 = new TableSchema.TableColumn(schema);
                colvarPhonenumber2.ColumnName = "phonenumber2";
                colvarPhonenumber2.DataType = DbType.String;
                colvarPhonenumber2.MaxLength = 20;
                colvarPhonenumber2.AutoIncrement = false;
                colvarPhonenumber2.IsNullable = true;
                colvarPhonenumber2.IsPrimaryKey = false;
                colvarPhonenumber2.IsForeignKey = false;
                colvarPhonenumber2.IsReadOnly = false;
                
                schema.Columns.Add(colvarPhonenumber2);
                
                TableSchema.TableColumn colvarIdentitynationality = new TableSchema.TableColumn(schema);
                colvarIdentitynationality.ColumnName = "identitynationality";
                colvarIdentitynationality.DataType = DbType.Int32;
                colvarIdentitynationality.MaxLength = 0;
                colvarIdentitynationality.AutoIncrement = false;
                colvarIdentitynationality.IsNullable = true;
                colvarIdentitynationality.IsPrimaryKey = false;
                colvarIdentitynationality.IsForeignKey = false;
                colvarIdentitynationality.IsReadOnly = false;
                
                schema.Columns.Add(colvarIdentitynationality);
                
                TableSchema.TableColumn colvarOccupation = new TableSchema.TableColumn(schema);
                colvarOccupation.ColumnName = "occupation";
                colvarOccupation.DataType = DbType.String;
                colvarOccupation.MaxLength = 50;
                colvarOccupation.AutoIncrement = false;
                colvarOccupation.IsNullable = true;
                colvarOccupation.IsPrimaryKey = false;
                colvarOccupation.IsForeignKey = false;
                colvarOccupation.IsReadOnly = false;
                
                schema.Columns.Add(colvarOccupation);
                
                TableSchema.TableColumn colvarPassportnumber = new TableSchema.TableColumn(schema);
                colvarPassportnumber.ColumnName = "passportnumber";
                colvarPassportnumber.DataType = DbType.String;
                colvarPassportnumber.MaxLength = 44;
                colvarPassportnumber.AutoIncrement = false;
                colvarPassportnumber.IsNullable = true;
                colvarPassportnumber.IsPrimaryKey = false;
                colvarPassportnumber.IsForeignKey = false;
                colvarPassportnumber.IsReadOnly = false;
                
                schema.Columns.Add(colvarPassportnumber);
                
                TableSchema.TableColumn colvarUsername = new TableSchema.TableColumn(schema);
                colvarUsername.ColumnName = "username";
                colvarUsername.DataType = DbType.String;
                colvarUsername.MaxLength = 50;
                colvarUsername.AutoIncrement = false;
                colvarUsername.IsNullable = true;
                colvarUsername.IsPrimaryKey = false;
                colvarUsername.IsForeignKey = false;
                colvarUsername.IsReadOnly = false;
                
                schema.Columns.Add(colvarUsername);
                
                TableSchema.TableColumn colvarPassword = new TableSchema.TableColumn(schema);
                colvarPassword.ColumnName = "password";
                colvarPassword.DataType = DbType.String;
                colvarPassword.MaxLength = 50;
                colvarPassword.AutoIncrement = false;
                colvarPassword.IsNullable = true;
                colvarPassword.IsPrimaryKey = false;
                colvarPassword.IsForeignKey = false;
                colvarPassword.IsReadOnly = false;
                
                schema.Columns.Add(colvarPassword);
                
                TableSchema.TableColumn colvarUserInfoFull = new TableSchema.TableColumn(schema);
                colvarUserInfoFull.ColumnName = "user_info_full";
                colvarUserInfoFull.DataType = DbType.String;
                colvarUserInfoFull.MaxLength = 214;
                colvarUserInfoFull.AutoIncrement = false;
                colvarUserInfoFull.IsNullable = true;
                colvarUserInfoFull.IsPrimaryKey = false;
                colvarUserInfoFull.IsForeignKey = false;
                colvarUserInfoFull.IsReadOnly = false;
                
                schema.Columns.Add(colvarUserInfoFull);
                
                TableSchema.TableColumn colvarUserStatusText = new TableSchema.TableColumn(schema);
                colvarUserStatusText.ColumnName = "user_status_text";
                colvarUserStatusText.DataType = DbType.String;
                colvarUserStatusText.MaxLength = 50;
                colvarUserStatusText.AutoIncrement = false;
                colvarUserStatusText.IsNullable = true;
                colvarUserStatusText.IsPrimaryKey = false;
                colvarUserStatusText.IsForeignKey = false;
                colvarUserStatusText.IsReadOnly = false;
                
                schema.Columns.Add(colvarUserStatusText);
                
                TableSchema.TableColumn colvarIsadmin = new TableSchema.TableColumn(schema);
                colvarIsadmin.ColumnName = "isadmin";
                colvarIsadmin.DataType = DbType.AnsiString;
                colvarIsadmin.MaxLength = 4;
                colvarIsadmin.AutoIncrement = false;
                colvarIsadmin.IsNullable = true;
                colvarIsadmin.IsPrimaryKey = false;
                colvarIsadmin.IsForeignKey = false;
                colvarIsadmin.IsReadOnly = false;
                
                schema.Columns.Add(colvarIsadmin);
                
                TableSchema.TableColumn colvarBancboxClientId = new TableSchema.TableColumn(schema);
                colvarBancboxClientId.ColumnName = "bancbox_client_id";
                colvarBancboxClientId.DataType = DbType.Int32;
                colvarBancboxClientId.MaxLength = 0;
                colvarBancboxClientId.AutoIncrement = false;
                colvarBancboxClientId.IsNullable = true;
                colvarBancboxClientId.IsPrimaryKey = false;
                colvarBancboxClientId.IsForeignKey = false;
                colvarBancboxClientId.IsReadOnly = false;
                
                schema.Columns.Add(colvarBancboxClientId);
                
                TableSchema.TableColumn colvarBancboxClientStatus = new TableSchema.TableColumn(schema);
                colvarBancboxClientStatus.ColumnName = "bancbox_client_status";
                colvarBancboxClientStatus.DataType = DbType.AnsiString;
                colvarBancboxClientStatus.MaxLength = 50;
                colvarBancboxClientStatus.AutoIncrement = false;
                colvarBancboxClientStatus.IsNullable = true;
                colvarBancboxClientStatus.IsPrimaryKey = false;
                colvarBancboxClientStatus.IsForeignKey = false;
                colvarBancboxClientStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarBancboxClientStatus);
                
                TableSchema.TableColumn colvarBancboxCipStatus = new TableSchema.TableColumn(schema);
                colvarBancboxCipStatus.ColumnName = "bancbox_cip_status";
                colvarBancboxCipStatus.DataType = DbType.AnsiString;
                colvarBancboxCipStatus.MaxLength = 50;
                colvarBancboxCipStatus.AutoIncrement = false;
                colvarBancboxCipStatus.IsNullable = true;
                colvarBancboxCipStatus.IsPrimaryKey = false;
                colvarBancboxCipStatus.IsForeignKey = false;
                colvarBancboxCipStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarBancboxCipStatus);
                
                TableSchema.TableColumn colvarBancboxPaymentObjectKey = new TableSchema.TableColumn(schema);
                colvarBancboxPaymentObjectKey.ColumnName = "bancbox_payment_object_key";
                colvarBancboxPaymentObjectKey.DataType = DbType.Int64;
                colvarBancboxPaymentObjectKey.MaxLength = 0;
                colvarBancboxPaymentObjectKey.AutoIncrement = false;
                colvarBancboxPaymentObjectKey.IsNullable = true;
                colvarBancboxPaymentObjectKey.IsPrimaryKey = false;
                colvarBancboxPaymentObjectKey.IsForeignKey = false;
                colvarBancboxPaymentObjectKey.IsReadOnly = false;
                
                schema.Columns.Add(colvarBancboxPaymentObjectKey);
                
                TableSchema.TableColumn colvarSsn = new TableSchema.TableColumn(schema);
                colvarSsn.ColumnName = "ssn";
                colvarSsn.DataType = DbType.AnsiStringFixedLength;
                colvarSsn.MaxLength = 9;
                colvarSsn.AutoIncrement = false;
                colvarSsn.IsNullable = true;
                colvarSsn.IsPrimaryKey = false;
                colvarSsn.IsForeignKey = false;
                colvarSsn.IsReadOnly = false;
                
                schema.Columns.Add(colvarSsn);
                
                TableSchema.TableColumn colvarImageUrl = new TableSchema.TableColumn(schema);
                colvarImageUrl.ColumnName = "Image_URL";
                colvarImageUrl.DataType = DbType.String;
                colvarImageUrl.MaxLength = 200;
                colvarImageUrl.AutoIncrement = false;
                colvarImageUrl.IsNullable = true;
                colvarImageUrl.IsPrimaryKey = false;
                colvarImageUrl.IsForeignKey = false;
                colvarImageUrl.IsReadOnly = false;
                
                schema.Columns.Add(colvarImageUrl);
                
                TableSchema.TableColumn colvarVerificationPoints = new TableSchema.TableColumn(schema);
                colvarVerificationPoints.ColumnName = "verification_points";
                colvarVerificationPoints.DataType = DbType.Int32;
                colvarVerificationPoints.MaxLength = 0;
                colvarVerificationPoints.AutoIncrement = false;
                colvarVerificationPoints.IsNullable = true;
                colvarVerificationPoints.IsPrimaryKey = false;
                colvarVerificationPoints.IsForeignKey = false;
                colvarVerificationPoints.IsReadOnly = false;
                
                schema.Columns.Add(colvarVerificationPoints);
                
                TableSchema.TableColumn colvarLastOnline = new TableSchema.TableColumn(schema);
                colvarLastOnline.ColumnName = "last_online";
                colvarLastOnline.DataType = DbType.DateTime;
                colvarLastOnline.MaxLength = 0;
                colvarLastOnline.AutoIncrement = false;
                colvarLastOnline.IsNullable = true;
                colvarLastOnline.IsPrimaryKey = false;
                colvarLastOnline.IsForeignKey = false;
                colvarLastOnline.IsReadOnly = false;
                
                schema.Columns.Add(colvarLastOnline);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["Peerfx"].AddSchema("vw_Users_Info",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public VwUsersInfo()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public VwUsersInfo(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public VwUsersInfo(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public VwUsersInfo(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("UserKey")]
        [Bindable(true)]
        public int UserKey 
	    {
		    get
		    {
			    return GetColumnValue<int>("user_key");
		    }
            set 
		    {
			    SetColumnValue("user_key", value);
            }
        }
	      
        [XmlAttribute("AccountNumber")]
        [Bindable(true)]
        public string AccountNumber 
	    {
		    get
		    {
			    return GetColumnValue<string>("account_number");
		    }
            set 
		    {
			    SetColumnValue("account_number", value);
            }
        }
	      
        [XmlAttribute("Title")]
        [Bindable(true)]
        public string Title 
	    {
		    get
		    {
			    return GetColumnValue<string>("title");
		    }
            set 
		    {
			    SetColumnValue("title", value);
            }
        }
	      
        [XmlAttribute("FirstName")]
        [Bindable(true)]
        public string FirstName 
	    {
		    get
		    {
			    return GetColumnValue<string>("first_name");
		    }
            set 
		    {
			    SetColumnValue("first_name", value);
            }
        }
	      
        [XmlAttribute("MiddleName")]
        [Bindable(true)]
        public string MiddleName 
	    {
		    get
		    {
			    return GetColumnValue<string>("middle_name");
		    }
            set 
		    {
			    SetColumnValue("middle_name", value);
            }
        }
	      
        [XmlAttribute("LastName")]
        [Bindable(true)]
        public string LastName 
	    {
		    get
		    {
			    return GetColumnValue<string>("last_name");
		    }
            set 
		    {
			    SetColumnValue("last_name", value);
            }
        }
	      
        [XmlAttribute("Dob")]
        [Bindable(true)]
        public string Dob 
	    {
		    get
		    {
			    return GetColumnValue<string>("dob");
		    }
            set 
		    {
			    SetColumnValue("dob", value);
            }
        }
	      
        [XmlAttribute("CountryResidence")]
        [Bindable(true)]
        public int? CountryResidence 
	    {
		    get
		    {
			    return GetColumnValue<int?>("country_residence");
		    }
            set 
		    {
			    SetColumnValue("country_residence", value);
            }
        }
	      
        [XmlAttribute("Email")]
        [Bindable(true)]
        public string Email 
	    {
		    get
		    {
			    return GetColumnValue<string>("email");
		    }
            set 
		    {
			    SetColumnValue("email", value);
            }
        }
	      
        [XmlAttribute("IpAddress")]
        [Bindable(true)]
        public string IpAddress 
	    {
		    get
		    {
			    return GetColumnValue<string>("ip_address");
		    }
            set 
		    {
			    SetColumnValue("ip_address", value);
            }
        }
	      
        [XmlAttribute("LastChanged")]
        [Bindable(true)]
        public DateTime LastChanged 
	    {
		    get
		    {
			    return GetColumnValue<DateTime>("last_changed");
		    }
            set 
		    {
			    SetColumnValue("last_changed", value);
            }
        }
	      
        [XmlAttribute("SignedUp")]
        [Bindable(true)]
        public DateTime SignedUp 
	    {
		    get
		    {
			    return GetColumnValue<DateTime>("signed_up");
		    }
            set 
		    {
			    SetColumnValue("signed_up", value);
            }
        }
	      
        [XmlAttribute("UserStatus")]
        [Bindable(true)]
        public int? UserStatus 
	    {
		    get
		    {
			    return GetColumnValue<int?>("user_status");
		    }
            set 
		    {
			    SetColumnValue("user_status", value);
            }
        }
	      
        [XmlAttribute("UserType")]
        [Bindable(true)]
        public int? UserType 
	    {
		    get
		    {
			    return GetColumnValue<int?>("user_type");
		    }
            set 
		    {
			    SetColumnValue("user_type", value);
            }
        }
	      
        [XmlAttribute("Address1")]
        [Bindable(true)]
        public string Address1 
	    {
		    get
		    {
			    return GetColumnValue<string>("address1");
		    }
            set 
		    {
			    SetColumnValue("address1", value);
            }
        }
	      
        [XmlAttribute("Address2")]
        [Bindable(true)]
        public string Address2 
	    {
		    get
		    {
			    return GetColumnValue<string>("address2");
		    }
            set 
		    {
			    SetColumnValue("address2", value);
            }
        }
	      
        [XmlAttribute("City")]
        [Bindable(true)]
        public string City 
	    {
		    get
		    {
			    return GetColumnValue<string>("city");
		    }
            set 
		    {
			    SetColumnValue("city", value);
            }
        }
	      
        [XmlAttribute("State")]
        [Bindable(true)]
        public string State 
	    {
		    get
		    {
			    return GetColumnValue<string>("state");
		    }
            set 
		    {
			    SetColumnValue("state", value);
            }
        }
	      
        [XmlAttribute("Country")]
        [Bindable(true)]
        public int? Country 
	    {
		    get
		    {
			    return GetColumnValue<int?>("country");
		    }
            set 
		    {
			    SetColumnValue("country", value);
            }
        }
	      
        [XmlAttribute("Postalcode")]
        [Bindable(true)]
        public string Postalcode 
	    {
		    get
		    {
			    return GetColumnValue<string>("postalcode");
		    }
            set 
		    {
			    SetColumnValue("postalcode", value);
            }
        }
	      
        [XmlAttribute("Phonecountrycode1")]
        [Bindable(true)]
        public int? Phonecountrycode1 
	    {
		    get
		    {
			    return GetColumnValue<int?>("phonecountrycode1");
		    }
            set 
		    {
			    SetColumnValue("phonecountrycode1", value);
            }
        }
	      
        [XmlAttribute("Phonetype1")]
        [Bindable(true)]
        public int? Phonetype1 
	    {
		    get
		    {
			    return GetColumnValue<int?>("phonetype1");
		    }
            set 
		    {
			    SetColumnValue("phonetype1", value);
            }
        }
	      
        [XmlAttribute("Phonenumber1")]
        [Bindable(true)]
        public string Phonenumber1 
	    {
		    get
		    {
			    return GetColumnValue<string>("phonenumber1");
		    }
            set 
		    {
			    SetColumnValue("phonenumber1", value);
            }
        }
	      
        [XmlAttribute("Phonecountrycode2")]
        [Bindable(true)]
        public int? Phonecountrycode2 
	    {
		    get
		    {
			    return GetColumnValue<int?>("phonecountrycode2");
		    }
            set 
		    {
			    SetColumnValue("phonecountrycode2", value);
            }
        }
	      
        [XmlAttribute("Phonetype2")]
        [Bindable(true)]
        public int? Phonetype2 
	    {
		    get
		    {
			    return GetColumnValue<int?>("phonetype2");
		    }
            set 
		    {
			    SetColumnValue("phonetype2", value);
            }
        }
	      
        [XmlAttribute("Phonenumber2")]
        [Bindable(true)]
        public string Phonenumber2 
	    {
		    get
		    {
			    return GetColumnValue<string>("phonenumber2");
		    }
            set 
		    {
			    SetColumnValue("phonenumber2", value);
            }
        }
	      
        [XmlAttribute("Identitynationality")]
        [Bindable(true)]
        public int? Identitynationality 
	    {
		    get
		    {
			    return GetColumnValue<int?>("identitynationality");
		    }
            set 
		    {
			    SetColumnValue("identitynationality", value);
            }
        }
	      
        [XmlAttribute("Occupation")]
        [Bindable(true)]
        public string Occupation 
	    {
		    get
		    {
			    return GetColumnValue<string>("occupation");
		    }
            set 
		    {
			    SetColumnValue("occupation", value);
            }
        }
	      
        [XmlAttribute("Passportnumber")]
        [Bindable(true)]
        public string Passportnumber 
	    {
		    get
		    {
			    return GetColumnValue<string>("passportnumber");
		    }
            set 
		    {
			    SetColumnValue("passportnumber", value);
            }
        }
	      
        [XmlAttribute("Username")]
        [Bindable(true)]
        public string Username 
	    {
		    get
		    {
			    return GetColumnValue<string>("username");
		    }
            set 
		    {
			    SetColumnValue("username", value);
            }
        }
	      
        [XmlAttribute("Password")]
        [Bindable(true)]
        public string Password 
	    {
		    get
		    {
			    return GetColumnValue<string>("password");
		    }
            set 
		    {
			    SetColumnValue("password", value);
            }
        }
	      
        [XmlAttribute("UserInfoFull")]
        [Bindable(true)]
        public string UserInfoFull 
	    {
		    get
		    {
			    return GetColumnValue<string>("user_info_full");
		    }
            set 
		    {
			    SetColumnValue("user_info_full", value);
            }
        }
	      
        [XmlAttribute("UserStatusText")]
        [Bindable(true)]
        public string UserStatusText 
	    {
		    get
		    {
			    return GetColumnValue<string>("user_status_text");
		    }
            set 
		    {
			    SetColumnValue("user_status_text", value);
            }
        }
	      
        [XmlAttribute("Isadmin")]
        [Bindable(true)]
        public string Isadmin 
	    {
		    get
		    {
			    return GetColumnValue<string>("isadmin");
		    }
            set 
		    {
			    SetColumnValue("isadmin", value);
            }
        }
	      
        [XmlAttribute("BancboxClientId")]
        [Bindable(true)]
        public int? BancboxClientId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("bancbox_client_id");
		    }
            set 
		    {
			    SetColumnValue("bancbox_client_id", value);
            }
        }
	      
        [XmlAttribute("BancboxClientStatus")]
        [Bindable(true)]
        public string BancboxClientStatus 
	    {
		    get
		    {
			    return GetColumnValue<string>("bancbox_client_status");
		    }
            set 
		    {
			    SetColumnValue("bancbox_client_status", value);
            }
        }
	      
        [XmlAttribute("BancboxCipStatus")]
        [Bindable(true)]
        public string BancboxCipStatus 
	    {
		    get
		    {
			    return GetColumnValue<string>("bancbox_cip_status");
		    }
            set 
		    {
			    SetColumnValue("bancbox_cip_status", value);
            }
        }
	      
        [XmlAttribute("BancboxPaymentObjectKey")]
        [Bindable(true)]
        public long? BancboxPaymentObjectKey 
	    {
		    get
		    {
			    return GetColumnValue<long?>("bancbox_payment_object_key");
		    }
            set 
		    {
			    SetColumnValue("bancbox_payment_object_key", value);
            }
        }
	      
        [XmlAttribute("Ssn")]
        [Bindable(true)]
        public string Ssn 
	    {
		    get
		    {
			    return GetColumnValue<string>("ssn");
		    }
            set 
		    {
			    SetColumnValue("ssn", value);
            }
        }
	      
        [XmlAttribute("ImageUrl")]
        [Bindable(true)]
        public string ImageUrl 
	    {
		    get
		    {
			    return GetColumnValue<string>("Image_URL");
		    }
            set 
		    {
			    SetColumnValue("Image_URL", value);
            }
        }
	      
        [XmlAttribute("VerificationPoints")]
        [Bindable(true)]
        public int? VerificationPoints 
	    {
		    get
		    {
			    return GetColumnValue<int?>("verification_points");
		    }
            set 
		    {
			    SetColumnValue("verification_points", value);
            }
        }
	      
        [XmlAttribute("LastOnline")]
        [Bindable(true)]
        public DateTime? LastOnline 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("last_online");
		    }
            set 
		    {
			    SetColumnValue("last_online", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string UserKey = @"user_key";
            
            public static string AccountNumber = @"account_number";
            
            public static string Title = @"title";
            
            public static string FirstName = @"first_name";
            
            public static string MiddleName = @"middle_name";
            
            public static string LastName = @"last_name";
            
            public static string Dob = @"dob";
            
            public static string CountryResidence = @"country_residence";
            
            public static string Email = @"email";
            
            public static string IpAddress = @"ip_address";
            
            public static string LastChanged = @"last_changed";
            
            public static string SignedUp = @"signed_up";
            
            public static string UserStatus = @"user_status";
            
            public static string UserType = @"user_type";
            
            public static string Address1 = @"address1";
            
            public static string Address2 = @"address2";
            
            public static string City = @"city";
            
            public static string State = @"state";
            
            public static string Country = @"country";
            
            public static string Postalcode = @"postalcode";
            
            public static string Phonecountrycode1 = @"phonecountrycode1";
            
            public static string Phonetype1 = @"phonetype1";
            
            public static string Phonenumber1 = @"phonenumber1";
            
            public static string Phonecountrycode2 = @"phonecountrycode2";
            
            public static string Phonetype2 = @"phonetype2";
            
            public static string Phonenumber2 = @"phonenumber2";
            
            public static string Identitynationality = @"identitynationality";
            
            public static string Occupation = @"occupation";
            
            public static string Passportnumber = @"passportnumber";
            
            public static string Username = @"username";
            
            public static string Password = @"password";
            
            public static string UserInfoFull = @"user_info_full";
            
            public static string UserStatusText = @"user_status_text";
            
            public static string Isadmin = @"isadmin";
            
            public static string BancboxClientId = @"bancbox_client_id";
            
            public static string BancboxClientStatus = @"bancbox_client_status";
            
            public static string BancboxCipStatus = @"bancbox_cip_status";
            
            public static string BancboxPaymentObjectKey = @"bancbox_payment_object_key";
            
            public static string Ssn = @"ssn";
            
            public static string ImageUrl = @"Image_URL";
            
            public static string VerificationPoints = @"verification_points";
            
            public static string LastOnline = @"last_online";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
